apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontendreact-deployment
  labels:
    app: frontendreact-deploy
spec:
  replicas: 2 #要啟用幾個服務
  selector:
    matchLabels: #需與template中的labels相同
      app: frontendreact-app 
  template: #pod內容
    metadata:
      labels:
        app: frontendreact-app 
    spec:
      containers:
      - name: backend-app  #容器名稱
        image: jhinwei1228/react0315:latest #映像檔，預設找Docker Hub
        imagePullPolicy: Always #更新頻率，每次更新
        # imagePullPolicy: IfNotPresent #更新頻率，假如本地有image就不進行更新
        ports:
          - containerPort: 3000 #開放容器內的Port號
---
apiVersion: v1
kind: Service
metadata:
  name: frontendreact-service
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-ipv4: 20.18.208.19
spec:
  selector:
    app: frontendreact-app #需與Pod的Labels一樣，才能連結P
  type: ClusterIP  #設定才能在AKS中建立一個公用IP
  # type: LoadBalancer  #設定才能在AKS中建立一個公用IP
  ports:
    - targetPort: 3000 #Pod裡的服務運行的port
      name: port8080
      port: 80 #外部連線的port，公用IP:port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
      - http:
          paths:
          - path: /react
            pathType: Prefix 
            backend:
              service:
                name: frontendreact-service
                port:
                  number: 80    


#      http:
#        paths:
#        - path: /backend
#          pathType: Prefix
#          backend:
#            service:
#              name: backend-service
#              port:
#                number: 80






# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-service
# spec:
#   selector:
#     app: frontend-app  #需與Pod的Labels一樣，才能連結
#   clusterIP: 10.0.80.40
#   clusterIPs:
#     - 10.0.80.40
#   type: LoadBalancer
#   ports:
#     - targetPort: 80 #Pod裡的服務運行的port
#       name: port8080
#       port: 80 #外部連線的port，公用IP:port